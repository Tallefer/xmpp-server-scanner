
# Configuration

# Here you can configure several jabber accounts from which the discovery will
# be made.
# In order to reduce the bandwidth usage, it's better to use an account of a
# jabber server installed on the same host in which the script is running. In
# this case, that account should be the first one.
# You may want add more acounts from popular servers because it seems that 
# some servers doesn't always answer to small servers
[Jabber account 1]
USER                = xxxxxxx
PASSWORD            = xxxxxxx
RESOURCE            = pybot
SERVER              = jabber.example.com


# [Jabber account 2]
# USER                = xxxxxxx
# PASSWORD            = xxxxxxxx
# RESOURCE            = pybot
# SERVER              = jabberes.org


# Accounts to test gateways. If no account is defined, the bot will try to guess
# if the gateway accepts registrations or not.
# [service_category service_type gateway account]
# # AIM Terms of Service seems to forbid use with bots or third party software
# [gateway aim gateway account]
# username            = 1234
# password            = 1234
# 
# [gateway gadu-gadu gateway account]
# username            = 1234
# uin                 = 1234
# password            = 1234
# 
# [gateway gtalk gateway account]
# username            = xxxxxxxxxxxxxxxx@gmail.com
# password            = xxxxxxxx
# 
# # ICQ Terms of Service seems to forbid use with bots or third party software
# [gateway icq gateway account]
# username            = 1234
# password            = 1234
# 
# [conference irc gateway account]
# username            = 1234
# password            = 1234
# nick                = 1234
# 
# # MSN Terms of Service seems to forbid use with bots or third party software
# [gateway msn gateway account]
# username            = 1234@hotmail.com
# password            = 1234
# 
# # QQ Terms of Service seems to forbid use with bots or third party software
# [gateway qq gateway account]
# username            = 1234
# password            = 1234
# 
# [gateway sms gateway account]
# username            = 1234
# # url                 =
# # phone               =
# password            = 1234
# 
# [gateway smtp gateway account]
# username            = 1234
# password            = 1234
# 
# [gateway sip gateway account]
# username            = 1234
# password            = 1234
# 
# [gateway tlen gateway account]
# username            = 1234
# password            = 1234
# 
# [gateway xmpp gateway account]
# username            = xxxxxx
# # domain              = jabber.example.com
# server              = jabber.example.com
# password            = xxxxxx
# 
# [gateway yahoo gateway account]
# # username            = xxxxxxxxxxxxxxxx@yahoo.es
# username            = xxxxxxxxxxxxxxxx
# password            = xxxxxxxx



# Here you can setup some parameters for the discovery
[xmpp discoverer]


# Use multiple accounts to query servers
# When this option is set to True and a server does not answer it will retry
# with another account
# This will benefit accuracy on services detection over their availability as
# seen by users
# When set to False, only one randomly chosen account is used.
# When False only use one account chosen at random. This will benefit accuracy
# on detect the services availability as seen by users over the real service
# availability
USE_MULTIPLE_QUERY_ACCOUNTS = True

# When discovering with several accounts, the query will be done with different
# clients. If a client can discover a server, only use that client to test its
# services. There is no reason to set it as False
ONLY_USE_SUCCESFULL_CLIENT = True

# Times to retry if a query fails
# Not very useful if several accounts are used to do the discovery
ONLY_RETRY_SERVERS = True
INFO_QUERY_RETRIES = 1
ITEM_QUERY_RETRIES = 0


#
[Misc]

# Days of uptime information to store
UPTIME_LOG_DAYS     = 30

# Here you can setup your MySQL database configuration
[Database]
USER                = user
PASSWORD            = sql_password
HOST                = localhost
DATABASE            = server_list

UPDATE_DATABASE     = False


[Output configuration]
GENERATE_HTML_FILES = True
GENERATE_XML_FILES  = True

# Also create gzip compressed files.
COMPRESS_FILES      = True

# If you want to output only servers with 75% or higher uptime, use 0.75
HTML_UPTIME_FILTER   = 0
XML_UPTIME_FILTER   = 0

# Shrink names in the server column to N characters
HTML_SHRINK_SERVERNAMES    = True
HTML_SHRINK_SERVERNAMES_TO = 20

#The directory where will be generated the HTML and XML files
OUTPUT_DIRECTORY    = ..

# The prefix will be used to generate the filenames PREFIX.html, PREFIX_by_conference_irc.html
HTML_FILES_PREFIX   = servers
XML_FILENAME        = servers.xml

[Server list]
USE_URL             = True
USE_FILE            = True
SERVERS_URL         = http://xmpp.org/services/services.xml
SERVERS_FILE        = serverlist.xml

[Logs]
# If it's not configured, the logs will be written to the standard output
LOGFILE             = out.log

[Debug]
# If false, load the discovery results from servers.dump file,
# instead waiting while doing the real discovery
DO_DISCOVERY        = True

# Configuration end